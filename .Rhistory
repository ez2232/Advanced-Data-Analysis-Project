)
Training_data[1:10,]
Training_data <- filt_train_reviews_ids[(filt_train_reviews_ids[,4] != 3),1:7]
Training_reviews <- filt_train_reviews_ids[(filt_train_reviews_ids[,4] != 3),8]
colnames(Training_data)
Training_data[,5] <- replace(Training_data[,5], (Training_data[,5] > 3), 1)
install.packages('shiny')
library('shiny')
runExample('01_hello')
install.packages('dplyr')
install.packages('ggplot2')
install.packages('e1071')
install.packages('MASS')
install.packages('MASS')
split.screen()
split.screen(c(2,1))
data.frame('test' = c('1','2'), 'test2' = c(1,2), test3 = c('one', 'two'))
n = data.frame('test' = c('1','2'), 'test2' = c(1,2), test3 = c('one', 'two'))
n[1,]
n[1,]
n[1,1]
typeof(n[1,1])
typeof(n[1,2])
typeof(n[1,3])
view(n)
View(n)
n[1,1] = '1'
typeof(n[1,1])
n[1,1] = 'one'
rep('1', 5)
sign(c(5, -5))
n
n[1,1]='p'
n[,1]=c('p','q')
n
n[,1]=c('p',1)
n.names
names(n)
head(n)
k = mat.or.vec(5,5)
as.data.frame(k) -> k
k
names(k)[1]
names(k)[1] = 'p'
k
arrange(k)
library('dplyr');arrange(k)
k
k$p
k$p = c(1,2,3,4,5)
k
arrange(k, 'p')
arrange(k, p)
k$p = c(5,4,3,1,6)
k
arrange(k, p)
k
View(arrange(k, p))
View(k\)
View(k)
select(k, p)
select(k, 'new' = p)
k
transform(k, new = V2 + 1)
t = transform(k, new = V2 + 1)
t
filter(t, t > 3)
filter(t, t.p > 3)
t
filter(t, t$p > 3)
filter(t, t.p > 3)
filter(t, t.'p' > 3)
filter(t, t$p > 3)
k
k
bind(k)
bind_rows(k,k)
k
k = bind_rows(k,k)
k
k.V2 = runif(10,0,1)
k
k.V2 = runif(10,0,1)
k
k$V2 = runif(10,0,1)
k
group_by()
group_by(k, p)
summarize(group_by(k,p), mean())
summarize(group_by(k,p), new = mean())
summarize(group_by(k,p), mean(V2))
k %>% group_by(,p)
k %>% group_by(p)
k %>% group_by(p)
k %>% group_by(p) %>% summarize(mean(V2))
q = 1
q %>% +1
product(c(1,2,3))
prod(c(1,2,3))
k %>% group_by(p) %>% summarize(prod(V2))
k
library(ggplot2)
x = rnorm(25, 0, 1)
x
(x = rnorm(25, 0, 1))
ggplot(x)
ggplot() + geom_histogram(x)
ggplot() + geom_histogram(aes(x = data)
)
ggplot() + geom_histogram(aes(data = x))
ggplot() + geom_histogram(aes(data = x))
ggplot() + geom_histogram(aes(x = data))
x = rnorm(25, 30, 10)
ggplot() + geom_histogram(aes(x = data))
ggplot() + geom_histogram(aes(data = x))
x
x = ceiling(x)
x
ggplot() + geom_histogram(aes(data = x))
ggplot() + geom_histogram(aes(x = data))
ggplot() + geom_histogram(aes(x))
ggplot() + geom_histogram(aes(x), bind = 5)
ggplot() + geom_histogram(aes(x), bins = 5)
ggplot() + geom_histogram(aes(x), bins = 5, color = "green")
ggplot() + geom_histogram(aes(x), bins = 5, color = "green", fill = 'red')
ggplot() + geom_histogram(aes(x), bins = 5, color = "green", fill = 'white')
ggplot() + geom_histogram(aes(x), bins = 5, color = "green", fill = 'black')
ggplot() + geom_histogram(aes(x), bins = 5, color = "green", fill = 'black') + ggtitle('ello')
ggplot() + geom_histogram(aes(x), bins = 5, color = "green", fill = 'black') + ggtitle('ello') + geom_density()
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density()
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = density))
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = ..density..))
ggplot() + geom_density(aes(x, y = ..density..)) + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello')
ggplot() + geom_density(aes(x, y = ..density..), alpha = 0.4) + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello')
ggplot() + geom_density(aes(y = ..density..), alpha = 0.4) + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello')
ggplot(aes(x = data)) + geom_density(aes(y = ..density..), alpha = 0.4) + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello')
aes(x)
aes(x)
x
ggplot(aes(x))
ggplot() + geom_histogram(x)
ggplot() + geom_histogram(aes(x = data))
ggplot(mapping = aes(x = data))
ggplot() + geom_histogram(mapping = aes(x = data))
ggplot() + geom_histogram(mapping = aes(x = data), bins = 10)
ggplot() + geom_histogram(aes(x = data), bins = 10)
ggplot(mapping = aes(x = data))
ggplot(mapping = aes(x = data)) + geom_histogram(bins = 10)
x
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = ..density..))
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = 1))
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = ..density))
ggplot() + geom_histogram(aes(x), bins = 30, color = "green", fill = 'black') + ggtitle('ello') + geom_density(aes(x, y = ..density..))
library('MASS')
data("Pima.tr")
raw <- Pima.tr
rm(Pima.tr)
# part a
nms = c('npreg','bp','skin','bmi','age')
x = data.frame(raw[nms])
y = as.matrix(raw['glu'])
model = lm(y ~ ., data = x)
summary(model)
which(apply(dfbetas(model), 1, max) > 1)
model2 = lmsreg(y ~ ., data = x)
summary(model)
summary(model2)
lmsreg(y ~ ., data = x)
model2 = lmsreg(x, y)
summary(model2)
model2
lmsreg(x, y)
summary(model)
model2
library('MASS')
data("Pima.tr")
raw <- Pima.tr
rm(Pima.tr)
# part a
nms = c('npreg','bp','skin','bmi','age')
x = data.frame(raw[nms])
y = as.matrix(raw['glu'])
n = length(y)
p = dim(x)[2]
model = lm(y ~ ., data = x)
summary(model)
X = as.matrix(x)
set.seed(23)
model2 = lmsreg(x=x, y=y)
x11()
par(mfrow=c(4,3))
for(i in c(2:dim(x)[2])){
for (j in c(1:(i-1))){
#x11()
plot(x[,i]*x[,j], model2$residuals,
main=paste('Model2 residuals vs.', nms[i], 'x', nms[j]),
xlab=paste(nms[i], 'x', nms[j]), ylab = 'model residuals'
)
}
}
r = 1
p=1
rm()
rm(list=ls())
ls()
p = 1
s = 1
ls()
rm(ls)
rm(ls())
rm(list=ls())
library(SDaA)
data('golfsrs')
#a.
backtee_col = as.matrix(golfsrs['backtee'])
mean(backtee_col)
n = length(backtee_col)
N = 14938
s = sd(backtee_col)
sqrt(var(backtee_col))
sqrt((1 - n/N)*s^2/n)
x11()
hist(backtee_col,
main = "Histogram of Back Tee Yardage",
xlab = "Back Tee Yardage")
library(MASS)
library(car)
library(glmnet)
data(birthwt)
bwt = birthwt['bwt']
age = birthwt['age']
lwt = birthwt['lwt']
race = birthwt['race']
smoke = birthwt['smoke']
ptl = birthwt['ptl']
ht = birthwt['ht']
ui = birthwt['ui']
ftv = birthwt['ftv']
N = dim(bwt)[1]
X = cbind(age, lwt, race, smoke,
ptl, ht, ui, ftv)
X1 = cbind(rep(1, N), X)
mat_x = matrix(unlist(X), nrow = N, byrow = TRUE)
mat_bwt = unlist(bwt)
library(lars)
lasso_model <- glmnet(mat_x, mat_bwt, alpha = 1)
n_coeff = length(lasso_model$dev.ratio)
best_lambda = lasso_model$lambda[n_coeff]
coef_lasso = t(coef(lasso_model, s = best_lambda))
library(stats)
(AIC_step_model <- step(model))
model <- lm(bwt ~ age + lwt + race + smoke +
ptl + ht + ui + ftv, data = birthwt)
AIC_step_model <- step(model))
(AIC_step_model <- step(model))
5732239/var(bwt)
5732239/9/var(bwt)
coeff_lasso = t(coef(lasso_model, s = best_lambda))
coeff_step = AIC_step_model$coefficients
resid_lasso = as.matrix(X1) %*% as.vector(coeff_lasso) - as.vector(bwt)
resid_step = as.matrix(X1) %*% as.vector(coeff_step) - as.vector(bwt)
coeff_step
tyepof(coeff_step)
typeof(coeff_step)
resid_step = as.matrix(X1) %*% coeff_step - as.vector(bwt)
dim(coeff_step)
dim(t(coeff_step))
dim(as.matrix(X1))
coeff_step
names(coeff_step)
names(coeff_step)[-1]
X2 = cbind(rep(1, N), X[names(coeff_step)[-1]])
dim(X2)
resid_step = as.matrix(X2) %*% coeff_step - as.vector(bwt)
head(resid_step)
sum(resid_lasso^2)/(length(coeff_lasso) - 1)/
sum(resid_step^2)/(length(coeff_step) - 1)
(sum(resid_lasso^2)/(length(coeff_lasso) - 1))/
(sum(resid_step^2)/(length(coeff_step) - 1))
coeff_lasso
resid_lasso = as.matrix(X1) %*% as.vector(coeff_lasso) - as.vector(bwt)
X2 = cbind(rep(1, N), X[names(coeff_step)[-1]])
resid_step = as.matrix(X2) %*% coeff_step - as.vector(bwt)
(sum(resid_lasso^2)/(length(coeff_lasso) - 1))/
(sum(resid_step^2)/(length(coeff_step) - 1))
summary(model)
model2 <- lm.ridge(bwt ~ age + lwt + race + smoke +
ptl + ht + ui + ftv, data = birthwt,
lambda = 1000)
coefficients(model2)
setwd('C:/Users/Jack/Desktop/Columbia Masters/Fall 2016 Courses/Advanced Data Analysis/Homework/HW 5')
raw = read.table('diet.dat', header=T)
use_rows = (raw['covar'] != '.')
Y = unlist(raw['dmi'][use_rows])
block = unlist(raw['block'][use_rows])
weeks = unlist(raw['weeks'][use_rows])
treat = factor(unlist(raw['trt'][use_rows]))
base = as.numeric(unlist(raw['covar'][use_rows]))
anova2 = aov(Y ~ base + treat)
summary(anova2)
cof = anova2$coefficients
y_hat = anova2$fitted.values
y_hat_bar_i_dot = aggregate(y_hat, by=list(treat), FUN = mean)
beta_hat = cof['base']
X_bar_i_dot = aggregate(base, by=list(treat), FUN = mean)
#computing adjusted means
mu_hat_1 = y_hat_bar_i_dot[1,2] - beta_hat*X_bar_i_dot[1,2]
mu_hat_2 = y_hat_bar_i_dot[2,2] - beta_hat*X_bar_i_dot[2,2]
mu_hat_3 = y_hat_bar_i_dot[3,2] - beta_hat*X_bar_i_dot[3,2]
mu_hat_4 = y_hat_bar_i_dot[4,2] - beta_hat*X_bar_i_dot[4,2]
mu_hat_5 = y_hat_bar_i_dot[5,2] - beta_hat*X_bar_i_dot[5,2]
mu_hat_6 = y_hat_bar_i_dot[6,2] - beta_hat*X_bar_i_dot[6,2]
mu_hats = c(mu_hat_1, mu_hat_2, mu_hat_3, mu_hat_4, mu_hat_5, mu_hat_6)
names(mu_hats) = c('mu_hat_1', 'mu_hat_2', 'mu_hat_3', 'mu_hat_4',
'mu_hat_5', 'mu_hat_6')
x11()
par(mfrow=c(1,2))
hist(anova2$residuals, main = 'Histogram of ANOVA Residuals',
xlab = 'Residuals')
qqnorm(anova2$residuals, main = 'QQ Plot of ANOVA Residuals')
qqline(anova2$residuals)
shiny::runApp('C:/Users/Jack/Desktop/Columbia Masters/Fall 2016 Courses/Advanced Data Analysis/Group Project/Advanced Data Analysis Project/Viz')
runApp('C:/Users/Jack/Desktop/Columbia Masters/Fall 2016 Courses/Advanced Data Analysis/Group Project/Advanced Data Analysis Project/Viz')
setwd('C:/Users/Jack/Desktop/Columbia Masters/Fall 2016 Courses/Advanced Data Analysis/Group Project/Advanced Data Analysis Project')
library(ggplot2)
library(dplyr)
library(magrittr)
library(stringr)
#reading tables
Aliases = read.csv('Aliases.csv')
EmailReceivers = read.csv('EmailReceivers.csv')
Emails = read.csv('Emails.csv')
Persons = read.csv('Persons.csv')
View(head(Emails, 100))
View(head(Emails, 200))
View(head(Emails, 200))
Emails_cleaned = read.csv('Emails_cleaned.csv')
view(head(Emails_cleaned, 200))
View(head(Emails_cleaned, 200))
View(head(Emails_cleaned, 200))
45%(35/90) + (25%)(45/90) + (3%)(10/90)
45%*(35/90) + (25%)*(45/90) + (3%)*(10/90)
45%*(35/90) + 25%*(45/90) + 3%*(10/90)
45%
45/100*(35/90) + 25/100*(45/90) + 3/100*(10/90)
library('SDaA')
data("nybight")
raw = data("nybight")
raw = load("nybight")
raw = data("nybight")
data("nybight")
nybight
rm(raw)
head(nybight)
ind_1974 = (nybight['year'] ==  1974)
sum(ind_1974)
mean(ind_1974)
dim(nybight)
nybight_1974 = nybight[ind_1974,]
dim(nybight_1974)
head(nybight_1974)
catch_1974 = nybight_1974['catchnum']
x11()
boxplot(catch_1974 ~ strat_1974)
strat_1974 = nybight_1974['stratum']
x11()
boxplot(catch_1974 ~ strat_1974)
strat_1974 = unlist(nybight_1974['stratum'])
catch_1974 = unlist(nybight_1974['catchnum'])
x11()
boxplot(catch_1974 ~ strat_1974)
x11()
boxplot(catch_1974 ~ strat_1974,
main = 'Box Plot of # of Fish Catch in Trawls by Stratum',
xlab = 'Stratum',
ylab = '# of Fish Caught')
x11()
boxplot(catch_1974 ~ strat_1974,
main = 'Box Plot of # of Fish Catch in Trawls by Stratum',
xlab = 'Stratum',
ylab = '# of Fish Caught')
head(nybight_1974)
weight_1974 = unlist(nybight_1974['catchwt'])
unique(strat_1974)
strat_1974
list(strat_1974)
aggregate(catch_1974, by = strat_1974, FUN = mean)
aggregate(catch_1974, by = list(strat_1974), FUN = mean)
aggregate(weight_1974, by = list(strat_1974), FUN = mean)
n(c(1,2,3))
aggregate(catch_1974, by = list(strat_1974), FUN = n)
aggregate(catch_1974, by = list(strat_1974), FUN = n())
library(dplyr)
aggregate(catch_1974, by = list(strat_1974), FUN = n)
aggregate(catch_1974, by = list(strat_1974), FUN = length)
length(catch_1974)
mean_catch = aggregate(catch_1974, by = list(strat_1974), FUN = mean)
num_catch = aggregate(catch_1974, by = list(strat_1974), FUN = length)
mean_weight = aggregate(weight_1974, by = list(strat_1974), FUN = mean)
num_weight = aggregate(weight_1974, by = list(strat_1974), FUN = length)
mean_weight = aggregate(weight_1974, by = list(strat_1974), FUN = mean)
mean_catch
sum_weight = aggregate(weight_1974, by = list(strat_1974), FUN = sum)
sum_catch = aggregate(catch_1974, by = list(strat_1974), FUN = sum)
sum_catch
num_catch
um_catch = aggregate(catch_1974, by = list(strat_1974), FUN = length)
rm(um_catch)
num_catch = aggregate(catch_1974, by = list(strat_1974), FUN = length)
num_catch
sum_catch
num_catch
sum(sum_catch[,2] * c(1,1,2,2,2,2))/sum(num_catch[,2] * c(1,1,2,2,2,2))
mean(catch_1974)
sum_weight = aggregate(weight_1974, by = list(strat_1974), FUN = sum)
num_weight = aggregate(weight_1974, by = list(strat_1974), FUN = length)
sum(sum_weight[,2] * c(1,1,2,2,2,2))/sum(num_weight[,2] * c(1,1,2,2,2,2))
mean(weight_1974)
se_catch = aggregate(catch_1974, by = list(strat_1974), FUN = sd)
se_weight = aggregate(weight_1974, by = list(strat_1974), FUN = sd)
se_catch
se_weight
1-c(1,2,3)
head(nybight_1974)
head(nybight_1974)
rel_weight = c(1,1,2,2,2,2)
act_weight = rel_weight/sum(rel_weight)
act_weight
head(nybight_1974)
sum(x)
x = c(13,7,11,12,4,3,11,3,5)
y = c(10,7,13,17,8,1,15,7,4)
sum(x)
sum(y)
sd(x)
sd(y)
sum(y)/sum(x)
corr(x,y)
cov(x,y)
cor(x,y)
cov(x,y)/(length(x)*sd(x)*sd(y))
sum((x-mean(x))*(y-mean(y)))/((length(x)-1)*sd(x)*sd(y))
library('SDaA')
data("agsrs")
raw = data('agsrs')
rm(raw)
raw = data('agsrs')
rm(raw)
data("agsrs")
agsrs
head(agsrs)
dim(agsrs)
acres87 = unlist(agsrs['acres87'])
farms87 = unlist(agsrs['farms87'])
x11()
boxplot(farms87, main = 'BoxPlot of Number of Farms in 1987 from SRS',
ylab = '# of Farms')
acres92 = unlist(agsrs['acres92'])
head(nybight)
hist(unlist(nybight_1974['numspp']))
x11()
hist(unlist(nybight_1974['numspp']))
x11()
boxplot(unlist(nybight_1974['numspp']) ~ strat_1974)
mean(weight_1974)
head(nybight)
x11()
hist(unlist(nybight_1974['depth']))
sort(unique(unlist(nybight_1974['depth'])))
1/c(1,2,3)
acres92 = unlist(agsrs['acres92'])
length(acres92)
(2087759/mean(farms87)) * mean(farms87)
(2087759/mean(farms87)) * mean(acres92)
3078 * mean(acres92)
mean(acres92)/mean(farms87)
summary(lm(acres92 ~ farms87))
cor(acres92, farms87) * sd(acres92)/sd(farms87)
acres87 = unlist(agsrs['acres87'])
267029.81+47.65*2087759/3078
(267029.81+47.65*2087759/3078)*3078
data("agstrat")
agstrat
head(agstrat)
chickwts
head(chickwts)
data(chickwts)
head(chickwts)
raw = chickwts
raw = ChickWeight
head(raw)
head(raw,21)
c(1,2,3) %in% c(1,2,9)
ind = (raw['Time'] %in% c(4,8,12,16,20))
raw_ind = raw[ind]
head(raw_ind)
raw_ind = raw[ind,1]
head(raw_ind)
ind = (unlist(raw['Time']) %in% c(4,8,12,16,20))
length(ind)
dim(raw)
mean(ind)
raw_ind = raw[ind,1]
head(raw_ind)
raw_ind = raw[ind]
raw_ind = raw[ind,]
head(raw_ind)
install.packages("nmle")
library(installr)
check.for.updates.R()
updateR(F,T,F,F,F,F,T)
updateR()
